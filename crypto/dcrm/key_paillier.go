// Copyright 2018 The fusion-dcrm 
//Author: caihaijun@fusion.org

package dcrm 

import (
	"crypto/rand"
	"io"
//	"fmt"
	"math/big"
)

type privKey struct {
	pubKey
	L *big.Int // phi(n), (p-1)*(q-1)
	U *big.Int // l^-1 mod n
}

type pubKey struct {
	N        *big.Int // modulus
	Nplusone        *big.Int // n+1, since p and q are same length
	NSquared *big.Int
}

var paillier_threshold_index int
//tmp
func SetPaillierThresholdIndex(d int) {
    paillier_threshold_index = d
}
//tmp


func new_paillier_Key(rnd io.Reader, bitlen int,paillier_dprivkey *big.Int) *privKey {
	priv := new(privKey)
	one,_ := new(big.Int).SetString("1",10)
	p,_ := rand.Prime(rnd,bitlen)
	q,_:= rand.Prime(rnd,bitlen)

	// n = p * q
	n := new(big.Int).Mul(p, q)

	// l = phi(n) = (p-1) * q(-1)
	l := new(big.Int).Mul(
		new(big.Int).Sub(p, one),
		new(big.Int).Sub(q, one),
	)

	(&(priv.pubKey)).N = n
	(&(priv.pubKey)).NSquared = new(big.Int).Mul(n, n)
	(&(priv.pubKey)).Nplusone = new(big.Int).Add(n, one)
	priv.L = l
	priv.U = new(big.Int).ModInverse(l, n)

	//++++++++++caihaijun++++++++++++++
	/*fmt.Println("----paillier N is ---\n",(&(priv.pubKey)).N)
	fmt.Println("----paillier Nplusone is ---\n",(&(priv.pubKey)).Nplusone)
	fmt.Println("----paillier NSquared is ---\n",(&(priv.pubKey)).NSquared)
	fmt.Println("----paillier L is ---\n",priv.L)
	fmt.Println("----paillier U is ---\n",priv.U)*/

	//=================new
	ntmp,_ := new(big.Int).SetString("20306191961893512325063393972688793495235170449970900074395323251188219619512782138753328173753568377214911422577358893702694315891056313161335741879056528036371030645586165773501937533289132327543805847304363643346945903090392197537613591167030651128492765729008883520773731010543373201269459949812346532395164744007714896829287944321558000072108316176113375359870887549506774969198796475113124103975665133220995091304983178233727568224774532464884059431572172379517692699783253957128701302689738166120446915466240078455452218655903542203186500267049897580893361654052269396207114511951663164233568606557266636033643",10)
	(&(priv.pubKey)).N = ntmp

	Nplusone_tmp,_ := new(big.Int).SetString("20306191961893512325063393972688793495235170449970900074395323251188219619512782138753328173753568377214911422577358893702694315891056313161335741879056528036371030645586165773501937533289132327543805847304363643346945903090392197537613591167030651128492765729008883520773731010543373201269459949812346532395164744007714896829287944321558000072108316176113375359870887549506774969198796475113124103975665133220995091304983178233727568224774532464884059431572172379517692699783253957128701302689738166120446915466240078455452218655903542203186500267049897580893361654052269396207114511951663164233568606557266636033644",10)
	(&(priv.pubKey)).Nplusone = Nplusone_tmp


	NSquared_tmp := new(big.Int).Mul(ntmp,ntmp) //new(big.Int).SetString("904616941553635773773553793321455917506751278474433845959331981863910763095031215383949245523486760574792372118479006005226224853802603795105562152370054419469922196959882408343072918998547273788778026435196985675589833939781409595889850059098975325283734575913866226707690391496733807411426155519036225199946337957230774944368979868579338276211347742542578163798647093524377702357315781699782129366348186514830780436890935702234506358074261063011944247447023085261757656744942166875175301186160799974037620530249675040727962813153294621800009757930329212798616907525969413173384344353592426285410869788900284235927116047430235812727478280509886631201088135017727862143828821163154953339039698623296189183701332155271924932302256578851496504156012158525333686331629081302669415391868460102357772037917182111081569991438237381374488122322003620073701520595410608539101476838392406627696559969766149238897169564234689908825166435675037914788385358885720240354534479381291426436094761755620236904654497131747115214426819824287663070455642097504699118017629342521021314299102963979135082952866194797673706223206021663555374306727555115109735922046005857720540434246167909844779979431386130981795667960091072281869838963397664322536835121",10)
	(&(priv.pubKey)).NSquared = NSquared_tmp

	/*var L_tmp *big.Int
	if paillier_threshold_index == 0 {
	    fmt.Println("===================paillier d is %d=====================\n",0)
	    L_tmp,_ = new(big.Int).SetString("29047938025454910009266249553596769446110005638783316347535595928225297353853116087967636348315628837911964596084549341401691913825054235686638426384099553053124035190202455299276512385266034014972167788589889369762877007157228424125400582318753133361278347490749289616496394565786067197956451688418103879469542440758594179743650064089894330642314003860711114173392522013769078427972699338804312923345964147665850027431827975837335179321450550622726278439202963659467699786533815448710155241032856067403821694775655523694258698282155679696475999301584615830946286214231065153987638874447786085472322836768825057775668598923790926300161749980054048803356888297626380305366171282517913435848069838348348218497885704940544260806409364267543248010797315209742864979474100310725738421645615826614600932930120990635953415603467603330110032836798133174398905429613523510154677231238316821497551239480259058726214021980804811246889411140102459312286948526057381328046395264204573597461418874244616346917519647120246365556980548555522961341675556570656622497010221927868413388151249082898341984090686001102028725726102626497804696705975500781082062807193514346535889126998864001297639497076061241305299142467616763699421629556079852006580294",10)
	}
	if paillier_threshold_index == 1 {
	    fmt.Println("===================paillier d is %d=====================\n",1)
	    L_tmp,_ = new(big.Int).SetString("59341402588695560035394328313888152468161958117070421481590710522816905940237151705309333424214195250619644788338937955652747433464467882876569993716290599270790130677352057949764358313181142917383880743464399949095050837548717782368742026736097857197236496706047180520301870493771695418748828208424110016837445469406161218390177080070375949114512005490709672152174619512687551420343019797238150453884107706514922922355433942432131532314140174350578244660156537381773454839231564595088024492852937730720327581449270203390121192612997931159017785671022297749664107681587908140843204545252424059604797574845957304646520946824970737558066294778402501634602498664451779651385176913872743172652029544223753003348148460462350776235730557921269623052933653500252735619736361036465457695456401224383145512813148208036313474256438502070945542151764097963474795771325286137934260697595592500586893209308297656950410676252820275242643702337888363039377874874483179002470579352979547548248005205263631390810337774733202884705719049569406404249378246333350082854939814201367202579906360388968878520485483747193456036470633254901957125697985935591853922320253328831800235165574076968421134131353327544776048426070326827412336063895029342763464816",10)
	}
	if paillier_threshold_index == 2 {
	    fmt.Println("===================paillier d is %d=====================\n",2)
	    L_tmp,_ = new(big.Int).SetString("40918289180988429992919976978182074020846167107113799647553237453795830629366976107560854091129189783009986513886529698958308062036687560193324196625815913611738178135873354167683429797068067655328210196361397186094223842784465437508630937118911696978867258826482086049207618325021363758480883190430795114662743619669950495191663744819303681529266824226261219145340395983831360295999516841167952101439419635654419744986279667439692886012980738018846364949625368709444959133669867794565344871953369021458340867316912734042234270747175949868901810674300080898915284551327105824830218859802443965196138947245598630855971752148813675366046426869520020371415539289684185823661911097074692914310527107684068667906962068011764969591306701393448409797419486977007777485112529976980354632757300614688359649334361001420128630409318878635622452217759160850665417453342601611207147780992464446612949904062975659066981444803918896035258113464884201416262034216257583408810614785452121640597622524752019957190596237454401924380921154938906300738643273210606835614647239876391774465144480377680646716862104935898968608323741655598659444256672760262635607543045069009881927738687949198069908410064023984881892416145812639501271154527041877073783692",10)
	}
	if paillier_threshold_index == 3 {
	    fmt.Println("===================paillier d is %d=====================\n",3)
	    L_tmp,_ = new(big.Int).SetString("155661829616752352598167339326736405076681339613928749324842197734774955060735340342171728538047620712956813225183971546333247674994089899216835489943980240280122016569036069745065255816767121706262333117127438711594399265306099885786450238566987392943394630312791888272876342833467176510983534977246947564206025782937838689084138813063368364178793040233429933838390505653776987572175488822592155584465229636550661198647628604017835520864043115026267879395159427234913746020166318959298367495368389238005989665444382802064471586504229612363221010804956233683105920948317210101018761369973419731890227816419807917494941441136258217206038302877771825926311729254637488041448619449819193802292886230853005639594922554743275975837735261067820490773087677456148188699862066985552526618899975385555093062159108487843886782864610991180035838450828217206713128243824056270607390472042182647012619546005654327404049971863116924507056283814656290370314178409422145355272877122764451630369591099182781052925082527078450817790864191451477979924180870712571267097104763725108747582008781943026069959556440377348702670256876621034213460197369543935925005314608643216082579664064226775466304301966886164784570772615053529302016852559552398878603838",10)
	}
	priv.L = L_tmp*/
	priv.L = paillier_dprivkey

	U_tmp,_ := new(big.Int).SetString("16890612164982848370753507579822323965171172134027378002526100606008590391087047073504156072142550068334951493823402042303453211732857877075905602307891136455638879180252965749465340765570952145895077217736941385578277981920077868436618433085185511634906235419714432083042808697475971728396922951489262819043569644922882631999473089366428708320136232134229097172133127665787897825171436455235533447234627988205277635451853168401124869892905539655892077881288122986633720414681579566310266308924570723868900752876455412364933563078720775078093062487825239032994871353994773282415755431891170445843412787695427633073723",10)
	priv.U = U_tmp
	//======================new

	//==================old
	/*ntmp,_ := new(big.Int).SetString("30076850592334892498930721162649047321365285935624708788088780736735361862556660188323973996743250656128396625768225143963565077909177378926336798300641532989907767624791685310276930729032389970844357491185253501678131845316621597271513545902439167749204644901118132255643728518168307780832086922425417523278168811482501719302958355661861669126196823436452189094594591340062829243470788661769634153154622332754735389498657311118460778393394190541089517375249902301674689153150440775340193590594817938066027881294994259132135637647548560591476208914648731113735866860913381262281366087678657573599290256460198143648761",10)
	(&(priv.pubKey)).N = ntmp

	Nplusone_tmp,_ := new(big.Int).SetString("30076850592334892498930721162649047321365285935624708788088780736735361862556660188323973996743250656128396625768225143963565077909177378926336798300641532989907767624791685310276930729032389970844357491185253501678131845316621597271513545902439167749204644901118132255643728518168307780832086922425417523278168811482501719302958355661861669126196823436452189094594591340062829243470788661769634153154622332754735389498657311118460778393394190541089517375249902301674689153150440775340193590594817938066027881294994259132135637647548560591476208914648731113735866860913381262281366087678657573599290256460198143648762",10)
	(&(priv.pubKey)).Nplusone = Nplusone_tmp

	NSquared_tmp,_ := new(big.Int).SetString("904616941553635773773553793321455917506751278474433845959331981863910763095031215383949245523486760574792372118479006005226224853802603795105562152370054419469922196959882408343072918998547273788778026435196985675589833939781409595889850059098975325283734575913866226707690391496733807411426155519036225199946337957230774944368979868579338276211347742542578163798647093524377702357315781699782129366348186514830780436890935702234506358074261063011944247447023085261757656744942166875175301186160799974037620530249675040727962813153294621800009757930329212798616907525969413173384344353592426285410869788900284235927116047430235812727478280509886631201088135017727862143828821163154953339039698623296189183701332155271924932302256578851496504156012158525333686331629081302669415391868460102357772037917182111081569991438237381374488122322003620073701520595410608539101476838392406627696559969766149238897169564234689908825166435675037914788385358885720240354534479381291426436094761755620236904654497131747115214426819824287663070455642097504699118017629342521021314299102963979135082952866194797673706223206021663555374306727555115109735922046005857720540434246167909844779979431386130981795667960091072281869838963397664322536835121",10)
	(&(priv.pubKey)).NSquared = NSquared_tmp

	L_tmp,_ := new(big.Int).SetString("30076850592334892498930721162649047321365285935624708788088780736735361862556660188323973996743250656128396625768225143963565077909177378926336798300641532989907767624791685310276930729032389970844357491185253501678131845316621597271513545902439167749204644901118132255643728518168307780832086922425417523277821876786277772568931092352338610286384560729759752313013250833876293315021967611901833759452546773599787741932303383023363365273606048630544572590077623168319881650036402962666167309701110454939591231047586647248113053791611752665314327002346121104192524480640827555660300636323921547667701268125999278387024",10)
	priv.L = L_tmp

	U_tmp,_ := new(big.Int).SetString("16890612164982848370753507579822323965171172134027378002526100606008590391087047073504156072142550068334951493823402042303453211732857877075905602307891136455638879180252965749465340765570952145895077217736941385578277981920077868436618433085185511634906235419714432083042808697475971728396922951489262819043569644922882631999473089366428708320136232134229097172133127665787897825171436455235533447234627988205277635451853168401124869892905539655892077881288122986633720414681579566310266308924570723868900752876455412364933563078720775078093062487825239032994871353994773282415755431891170445843412787695427633073723",10)
	priv.U = U_tmp*/
	//==================old
	//++++++++++++++end+++++++++++++++++++
	return priv
}

func (priv *privKey) encrypt( m *big.Int,r *big.Int) *big.Int {
	pubkey := (&(priv.pubKey))
	// c = g^m * r^n mod n^2
	n := pubkey.N
	c := new(big.Int).Mod(
		new(big.Int).Mul(
			new(big.Int).Exp(pubkey.Nplusone, m, pubkey.NSquared),
			new(big.Int).Exp(r, n, pubkey.NSquared),
		),
		pubkey.NSquared,
	)
	return c 
}

func (priv *privKey) decrypt(c *big.Int) *big.Int {
	if priv.NSquared.Cmp(c) < 1 { // c < n^2
		return nil
	}

	one,_ := new(big.Int).SetString("1",10)
	// c^l mod n^2
	a := new(big.Int).Exp(c, priv.L, priv.NSquared)

	// L(a)
	// (a - 1) / n
	l := new(big.Int).Div(
		new(big.Int).Sub(a, one),
		priv.N,
	)

	// m = L(c^l mod n^2) * u mod n
	m := new(big.Int).Mod(new(big.Int).Mul(l, priv.U),priv.N)
    return m 
}



func (priv *privKey) decryptThresholdStepOne(c *big.Int) *big.Int {
	cTem := modPow(c, priv.L, priv.NSquared)
	return cTem
}

func (priv *privKey) decryptThresholdStepTwo(clist []*big.Int) *big.Int {
	tmp := clist[0]
	for i:= 1;i<len(clist);i++ {
	    a := tmp.Mul(tmp,clist[i])
	    a.Mod(a,priv.NSquared)
	    tmp = a
	}

	one,_ := new(big.Int).SetString("1",10)
	tmp.Sub(tmp,one)
	tmp.Div(tmp,priv.N)
	return tmp
}

func (priv *privKey) cipherAdd(c1 *big.Int,c2 *big.Int) *big.Int {
	pubkey := (&(priv.pubKey))
	return new(big.Int).Mod(new(big.Int).Mul(c1,c2),pubkey.NSquared)
}
func (priv *privKey) cipherMultiply(c1 *big.Int,cons *big.Int) *big.Int {
	pubkey := (&(priv.pubKey))
	return new(big.Int).Exp(c1, cons, pubkey.NSquared)
}
